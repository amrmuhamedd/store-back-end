import express from "express";
import { createInvoice } from "../controller/createInvoice.js";

const router = express.Router();

/**
 * @swagger
 * tags:
 *   - name: Invoices
 *     description: to create invoice
 */

/**
 * @swagger
 * components:
 *   schemas:
 *     InvoiceRequest:
 *       type: object
 *       properties:
 *         paymentType:
 *           type: string
 *           example: professional
 *         merchantId:
 *           type: string
 *           example: MID-3552-454
 *         isSuspendedPayment:
 *           type: boolean
 *           example: true
 *         customerName:
 *           type: string
 *           example: test customer
 *         description:
 *           type: string
 *           example: some description
 *         dueDate:
 *           type: string
 *           format: date
 *           example: 2021-06-01
 *         totalAmount:
 *           type: number
 *           example: 200
 *         invoiceReferenceId:
 *           type: string
 *           example: 620
 *         invoiceItems:
 *           type: array
 *           items:
 *             type: object
 *             properties:
 *               description:
 *                 type: string
 *                 example: invoice item description
 *               quantity:
 *                 type: integer
 *                 example: 5
 *               itemName:
 *                 type: string
 *                 example: laptop
 *               unitPrice:
 *                 type: number
 *                 example: 10
 *               subTotal:
 *                 type: number
 *                 example: 50
 *         state:
 *           type: string
 *           example: submitted
 *         extraFees:
 *           type: array
 *           items:
 *             type: object
 *             properties:
 *               name:
 *                 type: string
 *                 example: xxx
 *               rate:
 *                 type: number
 *                 example: 100
 *               flatFee:
 *                 type: number
 *                 example: 100
 *         tax:
 *           type: number
 *           example: 0
 *
 *     InvoiceResponse:
 *       type: object
 *       properties:
 *         response:
 *           type: object
 *           properties:
 *             paymentStatus:
 *               type: string
 *               example: unpaid
 *             dueDate:
 *               type: string
 *               format: date-time
 *               example: 2023-08-16T10:49:24.831Z
 *             isSuspendedPayment:
 *               type: boolean
 *               example: true
 *             currency:
 *               type: string
 *               example: EGP
 *             isBulkCreated:
 *               type: boolean
 *               example: false
 *             _id:
 *               type: string
 *               example: 64db72328de66500137346a8
 *             merchantId:
 *               type: string
 *               example: MID-3552-454
 *             autoGeneratedId:
 *               type: integer
 *               example: 458
 *             invoiceReferenceId:
 *               type: string
 *               example: 258.468
 *             paymentType:
 *               type: string
 *               example: professional
 *             totalAmount:
 *               type: number
 *               example: 200
 *             availableAmountForRefund:
 *               type: number
 *               example: 200
 *             description:
 *               type: string
 *               example: some description
 *             state:
 *               type: string
 *               example: submitted
 *             invoiceItems:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   _id:
 *                     type: string
 *                     example: 64db72328de66500137346a9
 *                   description:
 *                     type: string
 *                     example: invoice item description
 *                   quantity:
 *                     type: integer
 *                     example: 5
 *                   itemName:
 *                     type: string
 *                     example: laptop
 *                   unitPrice:
 *                     type: number
 *                     example: 10
 *                   subTotal:
 *                     type: number
 *                     example: 50
 *             customerName:
 *               type: string
 *               example: test customer
 *             paymentRequestId:
 *               type: string
 *               example: INV-3552454554
 *             creationDate:
 *               type: string
 *               format: date-time
 *               example: 2023-08-15T12:40:18.130Z
 *             merchantInfo:
 *               type: object
 *               properties:
 *                 storeName:
 *                   type: string
 *                   example: TEST ft- MK Co
 *             createdByUserId:
 *               type: string
 *               example: 5feccc49043fa4001f599657
 *             extraFees:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   name:
 *                     type: string
 *                     example: xxx
 *                   rate:
 *                     type: number
 *                     example: 100
 *                   flatFee:
 *                     type: number
 *                     example: 100
 *             channel:
 *               type: string
 *               example: web
 *             deviceType:
 *               type: string
 *               example: PostmanRuntime/7.29.3
 *             transactions:
 *               type: array
 *               items:
 *                 type: object
 *             __v:
 *               type: integer
 *               example: 0
 *         messages:
 *           type: object
 *           properties:
 *             en:
 *               type: string
 *               example: Invoice saved
 *             ar:
 *               type: string
 *               example: تم حفظ الفاتورة
 *         status:
 *           type: string
 *           example: SUCCESS
 *
 * /api/invoices:
 *   post:
 *     summary: Create a new invoice
 *     tags: [Invoices]
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/InvoiceRequest'
 *     responses:
 *       200:
 *         description: Invoice successfully created
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/InvoiceResponse'
 *       400:
 *         description: Invalid input
 *       500:
 *         description: Internal server error
 */
router.post("/", createInvoice);

export default router;
